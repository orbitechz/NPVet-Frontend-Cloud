name: Pipeline CI/CD Frontend Angular

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  testes:
    runs-on: ubuntu-latest
    name: Execução de Testes Automatizados
    steps:
      - name: Checkout do Código Fonte
        uses: actions/checkout@v3

      - name: Configuração do Ambiente Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalação de Dependências
        run: npm install

      - name: Execução de Testes Automatizados
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

  build-e-push-staging:
    runs-on: ubuntu-latest
    name: Build e Push da Imagem Docker - Ambiente de Staging
    needs: testes
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout do Código Fonte
        uses: actions/checkout@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/npvet-frontend:staging

  build-e-push-main:
    runs-on: ubuntu-latest
    name: Build e Push da Imagem Docker - Ambiente de Produção
    needs: testes
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout do Código Fonte
        uses: actions/checkout@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/npvet-frontend:latest
