name: Frontend Angular Pipeline

on:
  push:
    branches: 
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  testes:
    runs-on: ubuntu-latest
    name: Execução de Testes Automatizados
    steps:
      - name: Checkout do Código Fonte
        uses: actions/checkout@v3

      - name: Configuração do Ambiente Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalação de Dependências
        run: npm ci

      - name: Execução de Testes Automatizados
        run: npx ng test --browsers=ChromeHeadless --watch=false

  build-e-push:
    runs-on: ubuntu-latest
    name: Build e Push da Imagem Docker no GHCR
    needs: testes
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do Código Fonte
        uses: actions/checkout@v3

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Definir TAG dinamicamente
        id: tag
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "tag=staging" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi

      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
